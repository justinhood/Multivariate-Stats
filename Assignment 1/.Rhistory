experience=c(1,8,4,16,1,2,12,5,3)
experience=c(1,8,4,16,1,2,12,5,3)
time=c(8,4.7,3.7,2.8,8.9,5.8,2.0,1.9,3.3)
invexp=experience^(-1)
plot(invexp,time)
mod=lm(time ~ invexp)
summary(mod_)
summary(mod)
model.response(5)
2.0575+6.3537*5
2.0575+6.3537/5
SSE=sum(time**2)-(2.0575*sum(time)+6.3537*sum(time*invexp))
s2=SSE/7
s=sqrt(s2)
SSxx=sum(invexp**2)-((sum(invexp)))
SSxx=sum(invexp**2)-((sum(invexp))**2/9)
mean(invexp)
dist=1/9+((.2-mean(invexp))**2)/SSxx
v=s*2.365*sqrt(1+dist)
3.32824+v
3.32824-v
invexp
x=c(1,2,3)
y=c(4,5,6)
mod<- lm(y~x)
summary mod
summary(mod)
sum(x^2)
sum(y)
sum(x)
sum(xy)
sum(x*y)
x=c(1,2,3)
y=c(4,5,6)
mod <- lm(y~x)
summary(mod)
3*mean(y)*sum(x**2)-3*mean(x)*sum(x*y)
sum(x**2)-9*mean(x)**2
3*sum(x**2)-98mean(x)**2
3*sum(x**2)-9*mean(x)**2
3*sum(x*y)-9*mean(x)*mean(y)
clear()
comb=function(a,b){}
choose(9850,99)
x0=choose(150,0)*choose(9850,100)/choose(10000,100)
x0=choose(150,1)*choose(9850,99)/choose(10000,100)
x0=choose(150,0)*choose(9850,100)/choose(10000,100)
x1=choose(150,1)*choose(9850,99)/choose(10000,100)
p=x0+x1
p
x=choose(150,5)*choose(9850,95)/choose(10000,100)
for(i in 1:100){}
for(i in 1:100){
i+=1
}
s=0
i=1
for(i in 0:100){
s=s+choose(150,i)*choose(9850,100-i)/choose(10000,100)
}
s
2x0=choose(25,0)*choose(4975,100)/choose(5000,100)
r0=choose(25,0)*choose(4975,100)/choose(5000,100)
r1=choose(25,1)*choose(4975,99)/choose(5000,100)
1-r0-r1
s=0
for(i in 0:100){
s=s+choose(25,i)*choose(4975,100-i)/choose(5000,100)
}
t=pnorm(10.45,10.48,0.0142)
t
t2=pnorm(10.55,10.48,.0142)
t2=1-t2
t+t2
t
t2=pnorm(10.55,10.48,.0142)
t2
t2=1-t2
t2
exp(-97/1000)
exp(-97/1000)*(97/1000)/1
s=0
for(i in 0:97){
s=s+exp(-97/1000)*[(97/1000)**i]/(i!)
}
for(i in 0:97){
s=s+exp(-97/1000)*((97/1000)**i)/(i!)
}
for(i in 0:97){
s=s+exp(-97/1000)*((97/1000)**i)/(factorial(i))
}
exp(-97/1000)+exp(-97/1000)*(97/1000)/1
500*(exp(-97/1000)+exp(-97/1000)*(97/1000)/1)
setwd("~/Desktop/PSM/Spring 2019/Multivariate-Stats/Assignment 1")
#####1.2######
x1=c(1,2,3,3,4,5,6,8,9,11)
x2=c(18.95,19.00,17.95,15.54,14.00,12.95,8.94,7.49,6.00,3.99)
plot(x1,x2,xlab="Age in Years",ylab="Cost in Thousands of Dollars")
title(main="Used Car Cost vs Age")
png("1.2scatter.png")
plot(x1,x2,xlab="Age in Years",ylab="Cost in Thousands of Dollars")
title(main="Used Car Cost vs Age")
dev.off()
plot(x1, rep(1,10), xlim=c(0,12), ylim=c(1,1), xlab="", ylab="",axes = F)
plot(x1, rep(1,10), xlim=c(0,12), ylim=c(1,1), xlab="", ylab="")
install.packages("ggExtra")
library(ggplot2)
library(ggExtra)
ggMarginal(
ggplot(x1,x2)
ggtitle("Used Car Cost vs Age")
xlab("Age")
ylab("Cost (in Thousands)"),
type='scatter'
)
ggMarginal(
ggplot(x1,x2) +
ggtitle("Used Car Cost vs Age") +
xlab("Age") +
ylab("Cost (in Thousands)"),
type='scatter'
)
ggMarginal(ggplot(x1,x2), ggtitle("Used Car Cost vs Age"), xlab("Age"), ylab("Cost (in Thousands)"), type='scatter')
ggMarginal(ggplot(x1,x2), ggtitle("Used Car Cost vs Age"), xlab("Age"), ylab("Cost (in Thousands)"), type='density')
ggMarginal(ggplot(x1,x2), ggtitle("Used Car Cost vs Age"), xlab("Age"), ylab("Cost (in Thousands)"), type='histogram')
data.frame(x1,x2)
names.dat
dat$x1
dat=data.frame(x1,x2)
dat$x1
dat$x2
names.dat
plot(dat,aes(x1,x2))
ggMarginal(ggplot(dat,aes(x1,x2)), ggtitle("Used Car Cost vs Age"), xlab("Age"), ylab("Cost (in Thousands)"), type='histogram')
ggMarginal(ggplot(dat,aes(x1,x2)), ggtitle("Used Car Cost vs Age"), xlab("Age"), ylab("Cost (in Thousands)"), type='histogram')
ggMarginal(ggplot(dat)), ggtitle("Used Car Cost vs Age"), xlab("Age"), ylab("Cost (in Thousands)"), type='histogram')
ggMarginal(ggplot(dat), ggtitle("Used Car Cost vs Age"), xlab("Age"), ylab("Cost (in Thousands)"), type='histogram')
names(dat)
head(dat)
names(dat)<- c("Age","Cost")
ggMarginal(ggplot(dat, aes(Age, Cost))+geom_point() + theme_gray() + ggtitle("Used Car Cost vs Age") + xlab("Age") + ylab("Cost (in Thousands)"), type="histogram", fill="steelblue", col="darkblue")
png("1.2scatter.png")
ggMarginal(ggplot(dat, aes(Age, Cost))+geom_point() + theme_gray() + ggtitle("Used Car Cost vs Age") + xlab("Age") + ylab("Cost (in Thousands)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
png("12scatter.png")
ggMarginal(ggplot(dat, aes(Age, Cost))+geom_point() + theme_gray() + ggtitle("Used Car Cost vs Age") + xlab("Age") + ylab("Cost (in Thousands)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
mean(dat$Age)
mean(dat$Cost)
sum((dat$Age-mean(dat$Age))**2)
s11=sum((dat$Age-mean(dat$Age))**2)/10
s22=sum((dat$Cost-mean(dat$Cost))**2)/10
s12=sum((dat$Age-mean(dat$Age)*(dat$Cost-mean(dat$Cost))/10
)
)
s12=sum((dat$Age-mean(dat$Age))*(dat$Cost-mean(dat$Cost)))/10
r12=s12/(sqrt(s11)*sqrt(22))
r12=s12/(sqrt(s11)*sqrt(s22))
s11
s22
s12
r12
#### 1.4 ####
dat <- read.table("P1-4.DAT", header = FALSE)
dat
names(dat)<-c(x1,x2,x3)
names(dat)<-c("x1","x2","x3")
dat
ggMarginal(ggplot(dat, aes(x1, x2))+geom_point() + theme_gray() + ggtitle("Used Car Cost vs Age") + xlab("Sales (billions)") + ylab("Profits (billions)"), type="histogram", fill="steelblue", col="darkblue")
png("14scatter.png")
ggMarginal(ggplot(dat, aes(x1, x2))+geom_point() + theme_gray() + ggtitle("Used Car Cost vs Age") + xlab("Sales (billions)") + ylab("Profits (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
mean(dat$x1)
mean(dat$x2)
s11=sum((dat$x1-mean(dat$x1))**2)/size(dat$x1)
s11=sum((dat$x1-mean(dat$x1))**2)/length(dat$x1)
s22=sum((dat$x2-mean(dat$x2))**2)/length(dat$x2)
var(dat$x1)
7476.453*9/10
s12=sum((dat$x1-mean(dat$x1))*(dat$x2-mean(dat$x2)))/10
r12=s12/(sqrt(s11)*sqrt(s22))
png("14scatter.png")
ggMarginal(ggplot(dat, aes(x1, x2))+geom_point() + theme_gray() + ggtitle("$x_1$ vs $x_2$, Sales vs Profits") + xlab("Sales (billions)") + ylab("Profits (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
png("14scatter.png")
ggMarginal(ggplot(dat, aes(x1, x2))+geom_point() + theme_gray() + ggtitle("x_1 vs x_2, Sales vs Profits") + xlab("Sales (billions)") + ylab("Profits (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
png("1523scatter.png")
ggMarginal(ggplot(dat, aes(x2, x3))+geom_point() + theme_gray() + ggtitle("x_2 vs x_3, Profits vs Assets") + xlab("Profits (billions)") + ylab("Assets (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
png("1513scatter.png")
ggMarginal(ggplot(dat, aes(x1, x3))+geom_point() + theme_gray() + ggtitle("x_1 vs x_3, Sales vs Assets") + xlab("Sales (billions)") + ylab("Assets (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
mean(dat$x1)
mean(dat$x2)
mean(dat$x3)
s33=sum((dat$x3-mean(dat$x3))**2)/length(dat$x3)
s11
s22
s33
s12
s13=sum((dat$x1-mean(dat$x1))*(dat$x3-mean(dat$x3)))/10
s13
s23=sum((dat$x2-mean(dat$x2))*(dat$x3-mean(dat$x3)))/10
s23
r12
r13=s13/(sqrt(s11)*sqrt(s33))
r13
r23=s23/(sqrt(s22)*sqrt(s33))
r23
### 1.17 ####
dat <- read.table("T1-9.dat")
dat <- read.table("T1-9.dat", header = FALSE)
dat <- read.table("T1-9.dat", header = FALSE)
names(dat) <- c("Country","100m","200m","400m","800m(min)","1500m(min)","3000m(min)", "Marathon(min)")
dat[,1]
dat2 = dat[,2:]
dat2 = dat[,2:8]
dat2\
dat2
names(dat2)=c("x1","x2","x3","x4","x5","x6","x7")
head(dat2)
mean(dat2$x1)
mean(dat2$x2)
mean(dat2$x3)
mean(dat2$x4)
mean(dat2$x5)
mean(dat2$x6)
mean(dat2$x7)
dat2$x4=dat2$x4*60
dat2$x5=dat2$x5*60
dat2$x6=dat2$x6*60
dat2$x7=dat2$x7*60
mean(dat2$x4)
mean(dat2$x5)
mean(dat2$x6)
mean(dat2$x7)
s11=sum((dat2$x1-mean(dat2$x1))**2)/length(dat2$x1)
s12=sum((dat2$x1-mean(dat2$x1))*(dat2$x2-mean(dat2$x2)))/length(dat2$x1)
s13=sum((dat2$x1-mean(dat2$x1))*(dat2$x3-mean(dat2$x3)))/length(dat2$x1)
s14=sum((dat2$x1-mean(dat2$x1))*(dat2$x4-mean(dat2$x4)))/length(dat2$x1)
s15=sum((dat2$x1-mean(dat2$x1))*(dat2$x5-mean(dat2$x5)))/length(dat2$x1)
s16=sum((dat2$x1-mean(dat2$x1))*(dat2$x6-mean(dat2$x6)))/length(dat2$x1)
s17=sum((dat2$x1-mean(dat2$x1))*(dat2$x7-mean(dat2$x7)))/length(dat2$x1)
s23=sum((dat2$x2-mean(dat2$x2))*(dat2$x3-mean(dat2$x3)))/length(dat2$x1)
s24=sum((dat2$x2-mean(dat2$x2))*(dat2$x4-mean(dat2$x4)))/length(dat2$x1)
s25=sum((dat2$x2-mean(dat2$x2))*(dat2$x5-mean(dat2$x5)))/length(dat2$x1)
s26=sum((dat2$x2-mean(dat2$x2))*(dat2$x6-mean(dat2$x6)))/length(dat2$x1)
s27=sum((dat2$x2-mean(dat2$x2))*(dat2$x7-mean(dat2$x7)))/length(dat2$x1)
s34=sum((dat2$x3-mean(dat2$x3))*(dat2$x4-mean(dat2$x4)))/length(dat2$x1)
s35=sum((dat2$x3-mean(dat2$x3))*(dat2$x5-mean(dat2$x5)))/length(dat2$x1)
SN <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
SN[i,j] = (1/54)*sum((dat2[,i]-mean(dat2[,i]))*(dat2[,j]-mean(dat2[,j])))
}
}
s11
print(SN)
print(SN)
RN <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
RN[i,j] = SN[i,j]/(sqrt(SN[i,i])*sqrt(SN[jj]))
}
}
for(i in 1:7){
for(j in 1:7){
RN[i,j] = SN[i,j]/(sqrt(SN[i,i])*sqrt(SN[j,j]))
}
}
RN
RN
dat
dat=dat[,2:8]
dat
SN2 <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
SN2[i,j] = (1/54)*sum((dat[,i]-mean(dat[,i]))*(dat[,j]-mean(dat[,j])))
}
}
RN2 <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
RN2[i,j] = SN2[i,j]/(sqrt(SN2[i,i])*sqrt(SN2[j,j]))
}
}
RN2
mean(dat$`800m(min)`)
mean(dat$`1500m(min)`)
mean(dat$`3000m(min)`)
mean(dat$`Marathon(min)`)
dat2
speed=dat2
speed$x1=100/speed$x1
speed$x2=200/speed$x2
speed$x3=400/speed$x3
speed$x4=800/speed$x4
speed$x5=1500/speed$x5
speed$x6=3000/speed$x6
speed$x7=42195/speed$x7
speed
summary(speed)
summary(speed)
SSpeed <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
SSpeed[i,j] = (1/54)*sum((speed[,i]-mean(speed[,i]))*(speed[,j]-mean(speed[,j])))
}
}
SSpeed
SSpeed
RSpeed <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
RSpeed[i,j] = SSpeed[i,j]/(sqrt(SSpeed[i,i])*sqrt(SSpeed[j,j]))
}
}
RSpeed
RSpeed
png("1523scatter.png")
ggMarginal(ggplot(dat, aes(x2, x3))+geom_point() + theme_gray() + ggtitle("x_2 vs x_3, Profits vs Assets") + xlab("Profits (billions)") + ylab("Assets (billions)"), type="histogram", fill="steelblue", col="darkblue")
setwd("~/Desktop/PSM/Spring 2019/Multivariate-Stats/Assignment 1")
#####1.2######
x1=c(1,2,3,3,4,5,6,8,9,11)
x2=c(18.95,19.00,17.95,15.54,14.00,12.95,8.94,7.49,6.00,3.99)
library(ggplot2)
library(ggExtra)
dat=data.frame(x1,x2)
names(dat)<- c("Age","Cost")
png("12scatter.png")
ggMarginal(ggplot(dat, aes(Age, Cost))+geom_point() + theme_gray() + ggtitle("Used Car Cost vs Age") + xlab("Age") + ylab("Cost (in Thousands)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
(mean(dat$Age))
mean(dat$Cost)
s11=sum((dat$Age-mean(dat$Age))**2)/10
s22=sum((dat$Cost-mean(dat$Cost))**2)/10
s12=sum((dat$Age-mean(dat$Age))*(dat$Cost-mean(dat$Cost)))/10
r12=s12/(sqrt(s11)*sqrt(s22))
#### 1.4 ####
dat <- read.table("P1-4.DAT", header = FALSE)
names(dat)<-c("x1","x2","x3")
png("14scatter.png")
ggMarginal(ggplot(dat, aes(x1, x2))+geom_point() + theme_gray() + ggtitle("x_1 vs x_2, Sales vs Profits") + xlab("Sales (billions)") + ylab("Profits (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
mean(dat$x1)
mean(dat$x2)
s11=sum((dat$x1-mean(dat$x1))**2)/length(dat$x1)
s22=sum((dat$x2-mean(dat$x2))**2)/length(dat$x2)
s12=sum((dat$x1-mean(dat$x1))*(dat$x2-mean(dat$x2)))/10
r12=s12/(sqrt(s11)*sqrt(s22))
### 1.5 ####
png("1523scatter.png")
ggMarginal(ggplot(dat, aes(x2, x3))+geom_point() + theme_gray() + ggtitle("x_2 vs x_3, Profits vs Assets") + xlab("Profits (billions)") + ylab("Assets (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
png("1513scatter.png")
ggMarginal(ggplot(dat, aes(x1, x3))+geom_point() + theme_gray() + ggtitle("x_1 vs x_3, Sales vs Assets") + xlab("Sales (billions)") + ylab("Assets (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
mean(dat$x1)
mean(dat$x2)
mean(dat$x3)
s33=sum((dat$x3-mean(dat$x3))**2)/length(dat$x3)
s13=sum((dat$x1-mean(dat$x1))*(dat$x3-mean(dat$x3)))/10
s23=sum((dat$x2-mean(dat$x2))*(dat$x3-mean(dat$x3)))/10
r13=s13/(sqrt(s11)*sqrt(s33))
r23=s23/(sqrt(s22)*sqrt(s33))
### 1.17 ####
dat <- read.table("T1-9.dat", header = FALSE)
names(dat) <- c("Country","100m","200m","400m","800m(min)","1500m(min)","3000m(min)", "Marathon(min)")
dat=dat[,2:8]
summary(dat)
SN <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
SN[i,j] = (1/54)*sum((dat[,i]-mean(dat[,i]))*(dat[,j]-mean(dat[,j])))
}
}
print(SN)
RN <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
RN[i,j] = SN[i,j]/(sqrt(SN[i,i])*sqrt(SN[jj]))
}
}
for(i in 1:7){
for(j in 1:7){
RN[i,j] = SN[i,j]/(sqrt(SN[i,i])*sqrt(SN[j,j]))
}
}
print(RN)
### 1.18 ###
speed=dat
speed$x4=speed$x4*60
names(speed)
speed$`800m(min)`=speed$`800m(min)`*60
speed$`1500m(min)`=speed$`1500m(min)`*60
speed$`3000m(min)`=speed$`3000m(min)`*60
speed$`Marathon(min)`=speed$`Marathon(min)`*60
speed$`100m`=100/speed$`100m`
speed$`200m`=200/speed$`200m`
speed$`400m`=400/speed$`400m`
speed$`800m(min)`=800/speed$`800m(min)`
speed$`1500m(min)`=1500/speed$`1500m(min)`
speed$`3000m(min)`=3000/speed$`3000m(min)`
speed$`Marathon(min)`=42195/speed$`Marathon(min)`
summary(speed)
SSpeed <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
SSpeed[i,j] = (1/54)*sum((speed[,i]-mean(speed[,i]))*(speed[,j]-mean(speed[,j])))
}
}
print(SSpeed)
RSpeed <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
RSpeed[i,j] = SSpeed[i,j]/(sqrt(SSpeed[i,i])*sqrt(SSpeed[j,j]))
}
}
print(RSpeed)
setwd("~/Desktop/PSM/Spring 2019/Multivariate-Stats/Assignment 1")
#####1.2######
x1=c(1,2,3,3,4,5,6,8,9,11)
x2=c(18.95,19.00,17.95,15.54,14.00,12.95,8.94,7.49,6.00,3.99)
library(ggplot2)
library(ggExtra)
dat=data.frame(x1,x2)
names(dat)<- c("Age","Cost")
png("12scatter.png")
ggMarginal(ggplot(dat, aes(Age, Cost))+geom_point() + theme_gray() + ggtitle("Used Car Cost vs Age") + xlab("Age") + ylab("Cost (in Thousands)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
(mean(dat$Age))
mean(dat$Cost)
s11=sum((dat$Age-mean(dat$Age))**2)/10
s22=sum((dat$Cost-mean(dat$Cost))**2)/10
s12=sum((dat$Age-mean(dat$Age))*(dat$Cost-mean(dat$Cost)))/10
r12=s12/(sqrt(s11)*sqrt(s22))
#### 1.4 ####
dat <- read.table("P1-4.DAT", header = FALSE)
names(dat)<-c("x1","x2","x3")
png("14scatter.png")
ggMarginal(ggplot(dat, aes(x1, x2))+geom_point() + theme_gray() + ggtitle("x_1 vs x_2, Sales vs Profits") + xlab("Sales (billions)") + ylab("Profits (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
mean(dat$x1)
mean(dat$x2)
s11=sum((dat$x1-mean(dat$x1))**2)/length(dat$x1)
s22=sum((dat$x2-mean(dat$x2))**2)/length(dat$x2)
s12=sum((dat$x1-mean(dat$x1))*(dat$x2-mean(dat$x2)))/10
r12=s12/(sqrt(s11)*sqrt(s22))
### 1.5 ####
png("1523scatter.png")
ggMarginal(ggplot(dat, aes(x2, x3))+geom_point() + theme_gray() + ggtitle("x_2 vs x_3, Profits vs Assets") + xlab("Profits (billions)") + ylab("Assets (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
png("1513scatter.png")
ggMarginal(ggplot(dat, aes(x1, x3))+geom_point() + theme_gray() + ggtitle("x_1 vs x_3, Sales vs Assets") + xlab("Sales (billions)") + ylab("Assets (billions)"), type="histogram", fill="steelblue", col="darkblue")
dev.off()
mean(dat$x1)
mean(dat$x2)
mean(dat$x3)
s33=sum((dat$x3-mean(dat$x3))**2)/length(dat$x3)
s13=sum((dat$x1-mean(dat$x1))*(dat$x3-mean(dat$x3)))/10
s23=sum((dat$x2-mean(dat$x2))*(dat$x3-mean(dat$x3)))/10
r13=s13/(sqrt(s11)*sqrt(s33))
r23=s23/(sqrt(s22)*sqrt(s33))
### 1.17 ####
dat <- read.table("T1-9.dat", header = FALSE)
names(dat) <- c("Country","100m","200m","400m","800m(min)","1500m(min)","3000m(min)", "Marathon(min)")
dat=dat[,2:8]
summary(dat)
SN <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
SN[i,j] = (1/54)*sum((dat[,i]-mean(dat[,i]))*(dat[,j]-mean(dat[,j])))
}
}
print(SN)
RN <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
RN[i,j] = SN[i,j]/(sqrt(SN[i,i])*sqrt(SN[j,j]))
}
}
print(RN)
### 1.18 ###
speed=dat
speed$`800m(min)`=speed$`800m(min)`*60
speed$`1500m(min)`=speed$`1500m(min)`*60
speed$`3000m(min)`=speed$`3000m(min)`*60
speed$`Marathon(min)`=speed$`Marathon(min)`*60
speed$`100m`=100/speed$`100m`
speed$`200m`=200/speed$`200m`
speed$`400m`=400/speed$`400m`
speed$`800m(min)`=800/speed$`800m(min)`
speed$`1500m(min)`=1500/speed$`1500m(min)`
speed$`3000m(min)`=3000/speed$`3000m(min)`
speed$`Marathon(min)`=42195/speed$`Marathon(min)`
summary(speed)
SSpeed <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
SSpeed[i,j] = (1/54)*sum((speed[,i]-mean(speed[,i]))*(speed[,j]-mean(speed[,j])))
}
}
print(SSpeed)
RSpeed <- matrix(rep(NA,7*7),ncol=7)
for(i in 1:7){
for(j in 1:7){
RSpeed[i,j] = SSpeed[i,j]/(sqrt(SSpeed[i,i])*sqrt(SSpeed[j,j]))
}
}
print(RSpeed)
