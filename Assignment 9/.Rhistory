for(i in 0:100){
s=s+choose(150,i)*choose(9850,100-i)/choose(10000,100)
}
s
2x0=choose(25,0)*choose(4975,100)/choose(5000,100)
r0=choose(25,0)*choose(4975,100)/choose(5000,100)
r1=choose(25,1)*choose(4975,99)/choose(5000,100)
1-r0-r1
s=0
for(i in 0:100){
s=s+choose(25,i)*choose(4975,100-i)/choose(5000,100)
}
t=pnorm(10.45,10.48,0.0142)
t
t2=pnorm(10.55,10.48,.0142)
t2=1-t2
t+t2
t
t2=pnorm(10.55,10.48,.0142)
t2
t2=1-t2
t2
exp(-97/1000)
exp(-97/1000)*(97/1000)/1
s=0
for(i in 0:97){
s=s+exp(-97/1000)*[(97/1000)**i]/(i!)
}
for(i in 0:97){
s=s+exp(-97/1000)*((97/1000)**i)/(i!)
}
for(i in 0:97){
s=s+exp(-97/1000)*((97/1000)**i)/(factorial(i))
}
exp(-97/1000)+exp(-97/1000)*(97/1000)/1
500*(exp(-97/1000)+exp(-97/1000)*(97/1000)/1)
## 3.14 ##
rm(list = ls())
X <- matrix(c(9,1,
5,3,
1,2), byrow=TRUE,ncol = 2)
b1=2*X[1,1]+3*X[1,2]
b2=2*X[2,1]+3*X[2,2]
b3=2*X[3,1]+3*X[3,2]
B=c(b1,b2,b3)
bmean=mean(B)
bvar=var(B)
c1=-1*X[1,1]+2*X[1,2]
c2=-1*X[2,1]+2*X[2,2]
c3=-1*X[3,1]+2*X[3,2]
C=c(c1,c2,c3)
cmean=mean(C)
cvar=var(C)
oldcov=cov(B,C)
##################
xbar=matrix(c(mean(X[,1]),mean(X[,2])),byrow = TRUE,ncol = 2)
Xadj=X
for (i in 1:3) {
for (j in 1:2) {
Xadj[i,j]=X[i,j]-xbar[,j]
}
}
Xadj
S=(t(Xadj)%*%Xadj)/2
S
A=matrix(c(3,0,))
A=matrix(c(3,0,
0,-2), byrow\)
A=matrix(c(3,0,
0,-2), byrow=TRUE, ncol=2)
t(A)%*%A
eigen(t(A)%*%A)
A=matrix(c(2,0,
0,3), byrow=TRUE, ncol=2)
t(A)%*%A
eigen(t(A)%*%A)
A=matrix(c(0,2,
0,0,
0,0), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
A=matrix(c(1,1,
0,0), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
A
t(A)%*%A
A=matrix(c(1,1,
1,1), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
A=matrix(c(1,2,
0,2), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
sigma1=eigen(t(A)%*%A)$values[1]
sigma2=eigen(t(A)%*%A)$values[2]
sqrt(sigma1)
A=matrix(c(-2,11,
10,5), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
sqrt(160)
sqrt(90)
A=matrix(c(-2,11,
-10,5), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
setwd("~/Desktop/PSM/Spring 2019/Multivariate-Stats/Assignment 9")
p <- matrix(c(1.0, .63, .45,
.63, 1.0, .35,
.45, .35, 1.0), byrow=TRUE, ncol=3)
Cov <- matrix(c(.19,0,0,
0,.51,0,
0,0,.75),byrow=TRUE, ncol=3)
L <- matrix(c(.9,
.7,
.5),byrow=TRUE, ncol = 1)
(p <- matrix(c(1.0, .63, .45,
.63, 1.0, .35,
.45, .35, 1.0), byrow=TRUE, ncol=3))
(Cov <- matrix(c(.19,0,0,
0,.51,0,
0,0,.75),byrow=TRUE, ncol=3))
(L <- matrix(c(.9,
.7,
.5),byrow=TRUE, ncol = 1))
L%*%t(L)
(P-(L%*%t(L)+Cov))
(p-(L%*%t(L)+Cov))
(L%*%t(L)+Cov)
#9.2
h12 <- L[1]^2
h22 <- L[2]^2
h32 <- L[3]^2
#9.2
(h12 <- L[1]^2)
(h22 <- L[2]^2)
(h32 <- L[3]^2)
eigen(p)
lambda <- eigen(p)$values
lambda
#9.3
lambda <- eigen(p)$values
vec <- eigen(p)$vectors
vec
sum(lambda)
(lambda[1]*-vec[1])
(lambda[1]*-vec[:,1])
(lambda[1]*-vec[,1])
vec[,1]
(sqrt(lambda[1])*-vec[,1])
L1 <- (sqrt(lambda[1])*-vec[,1])
(
)
(L1 <- sqrt(lambda[1])*-vec[,1])
-vec[,1]
(Psi <- p-t(L1)%*%L1)
L1
t(L1)
L1 <- as.matrix(L1)
(Psi <- p-t(L1)%*%L1)
L1
(Psi <- p-(L1)%*%t(L1))
L1%*%t(L1)
P
p
(Psi <- p-(L1)%*%t(L1))
lambda[1]
(lambda[1]/sum(lambda))
#9.4
(ptild = p-Cov)
lambdatild <- eigen(ptild)$values
vectild <- eigen(ptild)$vectors
lambdatild
vectild
(sqrt(lambdatild[1]*-vectild[,1]))
(sqrt(lambdatild[1])*-vectild[,1]))
(sqrt(lambdatild[1])*-vectild[,1])
S <- matrix(c(11.072, 8.019, 8.160,
8.019, 6.417, 6.005,
8.160,6.005,6.773),byrow = TRUE, ncol=3)
S<-10**-3S
S<-10**-3*S
S
L <- matrix(c(.1022,
.0752,
.0765), byrow=TRUE, ncol = 1)
LL <- L%*%t(L)
LL
Sn=S*23/24
Sn
rm(list=ls())
S <- matrix(c(11.072, 8.019, 8.160,
8.019, 6.417, 6.005,
8.160,6.005,6.773),byrow = TRUE, ncol=3)
S<-10**-3*S
L <- matrix(c(.1022,
.0752,
.0765), byrow=TRUE, ncol = 1)
LL <- L%*%t(L)
Sn=S*23/24
Psi <- Sn-LL
Psi
diag(Psi)
Sn
(L^2)
sum(L^2)/sum(diag(Psi))
sum(L^2)/sum(diag(Sn))
sum(L^2)
sum(diag(Sn))
Resid <- Sn-LL-Psi
Resid
Sn
LL
Psi
(Resid <- Sn-LL-Psi)
(2*p+1-sqrt(8*p+1))/2
rm(list=ls())
S <- matrix(c(11.072, 8.019, 8.160,
8.019, 6.417, 6.005,
8.160,6.005,6.773),byrow = TRUE, ncol=3)
S<-10**-3*S
L <- matrix(c(.1022,
.0752,
.0765), byrow=TRUE, ncol = 1)
LL <- L%*%t(L)
n=24
Sn=S*(n-1)/n
Psi <- Sn-LL
(L^2)
sum(L^2)/sum(diag(Sn))
(Resid <- Sn-LL-Psi)
#9.13
p=3
(2*p+1-sqrt(8*p+1))/2
testStat <- (n-1-(2*p+4*m+5)/6)*log(det(LL+Psi)/det(Sn))
m=1
testStat <- (n-1-(2*p+4*m+5)/6)*log(det(LL+Psi)/det(Sn))
testStat
det(LL+Psi)
det(Sn)
X<-read.table("T1-5.dat", header = FALSE)
X<-c(X[,1],X[,2],X[,5],X[,6])
X
X<-data.frame(X[,1],X[,2],X[,5],X[,6])
X<-read.table("T1-5.dat", header = FALSE)
X<-data.frame(X[,1],X[,2],X[,5],X[,6])
X
n <- nrow(X)
p <- ncol(X)
(xbar <- t(matrix(1,ncol=n) %*% X)/n)
X<-as.matrix(X)
n <- nrow(X)
p <- ncol(X)
(xbar <- t(matrix(1,ncol=n) %*% X)/n)
(D <- X - matrix(1,nrow=n) %*% t(xbar))
(S <- (n-1)^(-1) * t(D)%*%D)
source("factanal2.R")
factanal2(X, 2, rotation = "none")
factanal2(X, 1, rotation = "none")
factanal(X, 1, rotation = "none")
factanal(X, 2, rotation = "none")
R <- cor(S)
R
R <- cor(X)
(R <- cor(X))
factanal(X, 2, rotation = "none")$loading
factanal2(X, 2, rotation = "none")$loading
factanal2(X, 2, rotation = "none")$loadings
factanal2(X, 2, rotation = "none")$communalities
factanal2(X, 2, rotation = "none")
factanal2(X, 1, rotation = "none")
3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3.3
factanal2(X, 1, rotation = "none")
factanal2(X, 2, rotation = "none")
factanal2(R, 1, rotation = "none")
factanal(R, 1, rotation = "none")
factanal(S, 1, rotation = "none")
factanal2(S, 1, rotation = "none")
factanal2(X, 1, rotation = "none")
lambda <- eig(R)$values
lambda <- eigen(R)$values
lambda
sum(lambda)
vec <- eigen(R)$vectors
vec
sqrt(lambda[1])*-vec[,1]
lambda <- eigen(S)$values
vec <- eigen(S)$vectors
sqrt(lambda[1])*-vec[,1]
lambda
sqrt(lambda[2])*-vec[,2]
S
sqrt(lambda[1])*-vec[,1]
lambda[1]
lambda[1]/sum(lambda)
sqrt(lambda[2])*-vec[,2]
(lambda[1]+lambda[2])/sum(lambda)
lambda <- eigen(S)$values
vec <- eigen(S)$vectors
(sqrt(lambda[1])*-vec[,1])
((sqrt(lambda[1])*-vec[,1])^2)
(lambda[1])
(lambda[1]/sum(lambda))
(sqrt(lambda[2])*-vec[,2])
((sqrt(lambda[1])*-vec[,1])^2+(sqrt(lambda[2])*-vec[,2])^2)
#9.12
rm(list=ls())
S <- matrix(c(11.072, 8.019, 8.160,
8.019, 6.417, 6.005,
8.160,6.005,6.773),byrow = TRUE, ncol=3)
S<-10**-3*S
L <- matrix(c(.1022,
.0752,
.0765), byrow=TRUE, ncol = 1)
LL <- L%*%t(L)
n=24
Sn=S*(n-1)/n
Psi <- Sn-LL
Psi
Psi <- diag(Psi)
Psi
Psi=diag(Psi)
Psi
Psi <- diag(Psi)
#9.12
rm(list=ls())
S <- matrix(c(11.072, 8.019, 8.160,
8.019, 6.417, 6.005,
8.160,6.005,6.773),byrow = TRUE, ncol=3)
S<-10**-3*S
L <- matrix(c(.1022,
.0752,
.0765), byrow=TRUE, ncol = 1)
LL <- L%*%t(L)
n=24
Sn=S*(n-1)/n
Psi <- Sn-LL
Psi <- diag(Psi)
Psi <- diag(Psi)
(L^2)
sum(L^2)/sum(diag(Sn))
(Resid <- Sn-LL-Psi)
#9.13
p=3
m=1
(testStat <- (n-1-(2*p+4*m+5)/6)*log(det(LL+Psi)/det(Sn)))
#Test Condition m<(2*p+1-sqrt(8*p+1))/2
(2*p+1-sqrt(8*p+1))/2
#9.20
rm(list=ls())
X<-read.table("T1-5.dat", header = FALSE)
X<-data.frame(X[,1],X[,2],X[,5],X[,6])
X<-as.matrix(X)
n <- nrow(X)
p <- ncol(X)
(xbar <- t(matrix(1,ncol=n) %*% X)/n)
(D <- X - matrix(1,nrow=n) %*% t(xbar))
(S <- (n-1)^(-1) * t(D)%*%D)
lambda <- eigen(S)$values
vec <- eigen(S)$vectors
(sqrt(lambda[1])*-vec[,1])
((sqrt(lambda[1])*-vec[,1])^2)
(lambda[1])
(lambda[1]/sum(lambda))
(sqrt(lambda[2])*-vec[,2])
((sqrt(lambda[1])*-vec[,1])^2+(sqrt(lambda[2])*-vec[,2])^2)
(lambda[2])
((lambda[1]+lambda[2])/sum(lambda))
source("factanal2.R")
factanal2(X, 1, rotation = "none")
factanal2(X, 2, rotation = "none")
factanal2(X, 1, rotation = "none")$Loadings
factanal2(X, 1, rotation = "none")$Loading
m1=factanal2(X, 1, rotation = "none")
m2=factanal2(X, 2, rotation = "none")
m1$loadings
m2$loadings
m2=factanal(X, 2, rotation = "none")
m2=factanal2(X, 2, rotation = "none")
m1$loadings[,1]
m1$loadings[,1]^2
m1$correlation
m1
print(m2=factanal2(X, 2, rotation = "none"),cutoff=0)
m2=factanal2(X, 2, rotation = "none")
m2
m2$loadings
print(m2$loadings,cutoff=0)
m1=factanal2(X, 1, rotation = "none")
m2=factanal2(X, 2, rotation = "none")
print(m2$loadings,cutoff=0)
m2$loadings[,1]^2
m2$loadings[,2]^2
m2$loadings[,1]^2+m2$loadings[,2]^2
1-m2$loadings[,1]^2
1-m1$loadings[,1]^2
1-m2$loadings[,1]^2+m2$loadings[,2]^2
1-(m2$loadings[,1]^2+m2$loadings[,2]^2)
(m2$loadings[,1]^2+m2$loadings[,2]^2)
1-(m2$loadings[,1]^2+m2$loadings[,2]^2)
prcomp(X,scale=FALSE)
17^2
prcomp(X,scale=TRUE)
princomp(X,scale=TRUE)
princomp(X)
prcomp(X)
Q = c((sqrt(lambda[1])*-vec[,1])^2,(sqrt(lambda[2])*-vec[,2])^2))
Q = c((sqrt(lambda[1])*-vec[,1])^2,(sqrt(lambda[2])*-vec[,2])^2)
Q <- as.matrix(Q)
Q
Q = as.matrix(c((sqrt(lambda[1])*-vec[,1])^2,(sqrt(lambda[2])*-vec[,2])^)2)
Q = as.matrix(c((sqrt(lambda[1])*-vec[,1])^2,(sqrt(lambda[2])*-vec[,2])^2))
Q
Q = as.matrix(c((sqrt(lambda[1])*-vec[,1]),(sqrt(lambda[2])*-vec[,2])))
Q
Q = as.matrix(c((sqrt(lambda[1])*-vec[,1]),(sqrt(lambda[2])*-vec[,2])), ncol=2)
Q
Q = matrix(c((sqrt(lambda[1])*-vec[,1]),(sqrt(lambda[2])*-vec[,2])), ncol=2)
Q
varimax(Q)
T<- varimax(Q)
Q%*%T$rotmat
Q = matrix(c((sqrt(lambda[1])*-vec[,1]),(sqrt(lambda[2])*-vec[,2])), ncol=2)
Rot<- varimax(Q)
Rot<- varimax(Q)
Q%*%Rot$rotmat
sum(lambda)
m22=factanal2(X, 2, rotation = "varimax")
m22
Rot$rotmat
(Rot<- varimax(Q))
(Q%*%Rot$rotmat)
sum(Q%*%Rot$rotmat^2)
sum(Q%*%Rot$rotmat[1,]^2)
Q%*%Rot$rotmat[1,]
Q%*%Rot$rotmat[1,1]
(A<-Q%*%Rot$rotmat)
rm(list=ls())
X<-read.table("T1-5.dat", header = FALSE)
X<-data.frame(X[,1],X[,2],X[,5],X[,6])
X<-as.matrix(X)
n <- nrow(X)
p <- ncol(X)
(xbar <- t(matrix(1,ncol=n) %*% X)/n)
(D <- X - matrix(1,nrow=n) %*% t(xbar))
(S <- (n-1)^(-1) * t(D)%*%D)
lambda <- eigen(S)$values
vec <- eigen(S)$vectors
(sqrt(lambda[1])*-vec[,1])
((sqrt(lambda[1])*-vec[,1])^2)
(lambda[1])
(lambda[1]/sum(lambda))
(sqrt(lambda[2])*-vec[,2])
((sqrt(lambda[1])*-vec[,1])^2+(sqrt(lambda[2])*-vec[,2])^2)
(lambda[2])
((lambda[1]+lambda[2])/sum(lambda))
source("factanal2.R")
m1=factanal2(X, 1, rotation = "none")
m2=factanal2(X, 2, rotation = "none")
print(m2$loadings,cutoff=0)
Q = matrix(c((sqrt(lambda[1])*-vec[,1]),(sqrt(lambda[2])*-vec[,2])), ncol=2)
(Rot<- varimax(Q))
(A<-Q%*%Rot$rotmat)
Rot$rotmat
A[1,]
sum(A[1,]^2)
sum(A[2,]^2)
sum(A[3,]^2)
sum(A[4,]^2)
sum(A[,1]^2)
sum(lambda)
sum(A[,1]^2)/sum(lambda)
sum(A[,2]^2)
sum(A[,2]^2)/sum(lambda)
m22=factanal2(X, 2, rotation = "varimax")
(m22=factanal2(X, 2, rotation = "varimax"))
m22$loadings
print(m22$loadings,cutoff=0)
F <- as.matrix(m22$loadings)
F
m22$loadings[,1]
m22$loadings[1,1]^2+m22$loadings[1,2]^2
m22$loadings[2,1]^2+m22$loadings[2,2]^2
m22$loadings[3,1]^2+m22$loadings[3,2]^2
m22$loadings[4,1]^2+m22$loadings[4,2]^2
m22
(R <- cov2cor(S))
lambdaR <- eigen(R)$values
vecR <- eigen(R)$vectors
(sqrt(lambdaR[1])*-vecR[,1])
((sqrt(lambdaR[1])*-vecR[,1])^2)
(lambdaR[1])
(lambdaR[1]/sum(lambdaR))
(sqrt(lambdaR[2])*-vecR[,2])
((sqrt(lambdaR[1])*-vecR[,1])^2+(sqrt(lambdaR[2])*-vecR[,2])^2)
(lambdaR[2])
((lambdaR[1]+lambdaR[2])/sum(lambdaR))
((lambdaR[2])/sum(lambdaR))
m1R=factanal2(R, 1, rotation = "none")
m1R=factanal2(R, 1, rotation = "varimax")
m1R=factanal2(X, 1, rotation = "varimax")
m1R
m1R=factanal2(S, 1, rotation = "varimax")
m1R=factanal2(S, 1, rotation = "none")
m1R=factanal2(X, 1, rotation = "none")
m1R
solve(R)
R
m1R=factanal2(R, 1, rotation = "none")
m1R=factanal2(R, 2, rotation = "none")
